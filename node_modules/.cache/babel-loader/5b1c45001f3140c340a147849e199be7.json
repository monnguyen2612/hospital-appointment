{"ast":null,"code":"var _jsxFileName = \"/Users/capt4inmon/hospital-appointment-booking/src/routes/BookingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport DoctorCard from '../components/DoctorCard';\nimport MessageCard from '../components/MessageCard';\nimport isAfter from 'date-fns/isAfter';\nimport isSameDay from 'date-fns/isSameDay';\nimport './BookingPage.css';\n\nconst BookingPage = props => {\n  const {\n    history,\n    location,\n    match\n  } = props;\n  const [patientName, setPatientName] = useState('');\n  const [address, setAddress] = useState('');\n  const [age, setAge] = useState('');\n  const [dateOfAppointment, setDateOfAppointment] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [doctorName, setDoctorName] = useState('');\n  const [departmentsArray, setDepartmentsArray] = useState('');\n  const [description, setDescription] = useState('');\n  const [doctorImage, setDoctorImage] = useState('');\n  const [qualification, setQualificiation] = useState('');\n  const [timings, setTimings] = useState('');\n  const [experience, setExperience] = useState('');\n  const [daysAvailable, setDaysAvailable] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [hospitalName, setHospitalName] = useState('');\n  const {\n    hospitalId,\n    doctorId\n  } = match.params;\n\n  const onInputChange = (event, setValue) => {\n    setValue(event.target.value);\n  };\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/doctors/${hospitalId}/${doctorId}`).then(response => response.json()).then(data => {\n      console.log(data.doctor);\n      console.log(data.hospital);\n      setDoctorName(data.doctor.name);\n      setExperience(data.doctor.years_of_exp);\n      setDoctorImage(data.doctor.img_url);\n      setQualificiation(data.doctor.qualification);\n      setDescription(data.doctor.description);\n      setTimings(data.doctor.timings);\n      setDepartmentsArray(data.doctor.departments);\n      setDaysAvailable(data.doctor.days_available);\n      setHospitalName(data.hospital.name);\n      const {\n        depts: departments\n      } = data.doctor;\n      setDepartmentsArray(departments.map(department => /*#__PURE__*/React.createElement(\"div\", {\n        key: department,\n        className: \"department-shape\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, department)));\n    });\n  }, [doctorId, hospitalId]);\n\n  const dataValidator = () => {\n    let invalidCount = 0;\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth() + 1;\n    const currentDate = today.getDate();\n    const reg = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n    const enteredDateArray = dateOfAppointment.split('-');\n    console.log(enteredDateArray, currentYear, currentMonth, currentDate, \"entered date array\");\n\n    if (patientName === null || patientName === '') {\n      setMessage('Entered name is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (age === 0 || age === '' || age.length > 3 || age === null || isNaN(age)) {\n      setMessage('Entered age is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (address === null || address === '') {\n      setMessage('Entered address is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (!isAfter(new Date(dateOfAppointment), new Date()) && !isSameDay(new Date(dateOfAppointment), new Date())) {\n      setMessage('Invalid date selected');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (String(contactNumber).length !== 10 || isNaN(contactNumber) || contactNumber === '') {\n      setMessage('Entered contact number is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (reg.test(email) === false || email === '') {\n      setMessage('Entered email is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    }\n\n    if (invalidCount === 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const onBookButtonClick = () => {\n    if (dataValidator()) {\n      setMessageType('alert-info');\n      setMessage('Booking appointment. Please wait.');\n      fetch(`${process.env.REACT_APP_SERVER_URL}/booking-appointment/${hospitalId}/${doctorId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: patientName,\n          address,\n          age,\n          email,\n          number: contactNumber,\n          date: dateOfAppointment,\n          hospital_name: hospitalName,\n          doctor_name: doctorName,\n          time: timings\n        })\n      }).then(response => response.json()).then(data => {\n        if (data === 'success') {\n          setMessage('Your appointment has been booked. Kindly check your email.');\n          setMessageType('alert-success');\n        } else {\n          setMessage('Unable to book appointment');\n          setMessageType('alert-danger');\n          console.log(data);\n        }\n\n        setPatientName('');\n        setAge('');\n        setAddress('');\n        setContactNumber('');\n        setDateOfAppointment('');\n        setEmail('');\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Booking form\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray',\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"You are booking an appointment for doctor working in hospital: \\xA0\", hospitalName), /*#__PURE__*/React.createElement(DoctorCard, {\n    history: history,\n    location: location,\n    id: doctorId,\n    key: doctorId,\n    name: doctorName,\n    degrees: qualification,\n    departments: departmentsArray,\n    experience: experience,\n    description: description,\n    daysAvailable: daysAvailable,\n    timings: timings,\n    doctorImageUrl: doctorImage,\n    bookButtonHidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#69d5b1',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, \"Please provide the following details to confirm your appointment\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Patient Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-textfield\",\n    placeholder: \"Enter Patient's name\",\n    value: patientName,\n    onChange: event => {\n      onInputChange(event, setPatientName);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter patient's age\",\n    className: \"form-textfield\",\n    value: age,\n    onChange: event => {\n      onInputChange(event, setAge);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter patient's address\",\n    className: \"form-textfield\",\n    value: address,\n    onChange: event => {\n      onInputChange(event, setAddress);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, \"Date of Appointment\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-textfield\",\n    value: dateOfAppointment,\n    onChange: event => {\n      onInputChange(event, setDateOfAppointment);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter mobile number\",\n    className: \"form-textfield\",\n    value: contactNumber,\n    onChange: event => {\n      onInputChange(event, setContactNumber);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter email address\",\n    className: \"form-textfield\",\n    value: email,\n    onChange: event => {\n      onInputChange(event, setEmail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ma2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessageCard, {\n    message: message,\n    messageType: messageType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"filled\",\n    onClick: onBookButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"Book Appointment\")));\n};\n\nexport default BookingPage;","map":{"version":3,"sources":["/Users/capt4inmon/hospital-appointment-booking/src/routes/BookingPage.js"],"names":["React","useState","useEffect","DoctorCard","MessageCard","isAfter","isSameDay","BookingPage","props","history","location","match","patientName","setPatientName","address","setAddress","age","setAge","dateOfAppointment","setDateOfAppointment","contactNumber","setContactNumber","doctorName","setDoctorName","departmentsArray","setDepartmentsArray","description","setDescription","doctorImage","setDoctorImage","qualification","setQualificiation","timings","setTimings","experience","setExperience","daysAvailable","setDaysAvailable","email","setEmail","message","setMessage","messageType","setMessageType","hospitalName","setHospitalName","hospitalId","doctorId","params","onInputChange","event","setValue","target","value","fetch","process","env","REACT_APP_SERVER_URL","then","response","json","data","console","log","doctor","hospital","name","years_of_exp","img_url","departments","days_available","depts","map","department","dataValidator","invalidCount","today","Date","currentYear","getFullYear","currentMonth","getMonth","currentDate","getDate","reg","enteredDateArray","split","length","isNaN","String","test","onBookButtonClick","method","headers","body","JSON","stringify","number","date","hospital_name","doctor_name","time","color","marginBottom","fontSize","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorCard from '../components/DoctorCard';\nimport MessageCard from '../components/MessageCard';\nimport isAfter from 'date-fns/isAfter';\nimport isSameDay from 'date-fns/isSameDay';\nimport './BookingPage.css';\n\nconst BookingPage = (props) => {\n  const { history, location, match } = props;\n  const [patientName, setPatientName] = useState('');\n  const [address, setAddress] = useState('');\n  const [age, setAge] = useState('');\n  const [dateOfAppointment, setDateOfAppointment] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [doctorName, setDoctorName] = useState('');\n  const [departmentsArray, setDepartmentsArray] = useState('');\n  const [description, setDescription] = useState('');\n  const [doctorImage, setDoctorImage] = useState('');\n  const [qualification, setQualificiation] = useState('');\n  const [timings, setTimings] = useState('');\n  const [experience, setExperience] = useState('');\n  const [daysAvailable, setDaysAvailable] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [hospitalName, setHospitalName] = useState('');\n\n  const { hospitalId, doctorId } = match.params;\n\n  const onInputChange = (event, setValue) => {\n    setValue(event.target.value);\n  };\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/doctors/${hospitalId}/${doctorId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.doctor);\n        console.log(data.hospital);\n        setDoctorName(data.doctor.name);\n        setExperience(data.doctor.years_of_exp);\n        setDoctorImage(data.doctor.img_url);\n        setQualificiation(data.doctor.qualification);\n        setDescription(data.doctor.description);\n        setTimings(data.doctor.timings);\n        setDepartmentsArray(data.doctor.departments);\n        setDaysAvailable(data.doctor.days_available);\n        setHospitalName(data.hospital.name);\n        const { depts: departments } = data.doctor;\n        setDepartmentsArray(departments.map((department) => (\n          <div key={department} className=\"department-shape\">\n            {department}\n          </div>\n        )));\n      });\n  }, [doctorId, hospitalId]);\n\n  const dataValidator = () => {\n    let invalidCount = 0;\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth() + 1;\n    const currentDate = today.getDate();\n    const reg = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n    const enteredDateArray = dateOfAppointment.split('-');\n    console.log(enteredDateArray, currentYear, currentMonth, currentDate, \"entered date array\");\n    if (patientName === null || patientName === '') {\n      setMessage('Entered name is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (age === 0 || age === '' || age.length > 3 || age === null || isNaN(age)) {\n      setMessage('Entered age is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (address === null || address === '') {\n      setMessage('Entered address is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (!isAfter(new Date(dateOfAppointment), new Date()) && !isSameDay(new Date(dateOfAppointment), new Date())) {\n      setMessage('Invalid date selected');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    }\n    else if (String(contactNumber).length !== 10 || isNaN(contactNumber) || contactNumber === '') {\n      setMessage('Entered contact number is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    } else if (reg.test(email) === false || email === '') {\n      setMessage('Entered email is invalid');\n      setMessageType('alert-danger');\n      invalidCount += 1;\n    }\n    if (invalidCount === 0) {\n      return true;\n    }\n    return false;\n  };\n\n  const onBookButtonClick = () => {\n    if (dataValidator()) {\n      setMessageType('alert-info');\n      setMessage('Booking appointment. Please wait.');\n      fetch(`${process.env.REACT_APP_SERVER_URL}/booking-appointment/${hospitalId}/${doctorId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name: patientName,\n          address,\n          age,\n          email,\n          number: contactNumber,\n          date: dateOfAppointment,\n          hospital_name: hospitalName,\n          doctor_name: doctorName,\n          time: timings,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data === 'success') {\n            setMessage('Your appointment has been booked. Kindly check your email.');\n            setMessageType('alert-success');\n          } else {\n            setMessage('Unable to book appointment');\n            setMessageType('alert-danger');\n            console.log(data);\n          }\n          setPatientName('');\n          setAge('');\n          setAddress('');\n          setContactNumber('');\n          setDateOfAppointment('');\n          setEmail('');\n        });\n    }\n  };\n\n  return (\n    <div className=\"booking-form-container\">\n      <div className=\"heading\">\n        Booking form\n      </div>\n      <br />\n      <div style={{ color: 'gray', marginBottom: '5px' }}>\n        You are booking an appointment for doctor working in hospital:\n        &nbsp;\n        {hospitalName}\n      </div>\n      <DoctorCard\n        history={history}\n        location={location}\n        id={doctorId}\n        key={doctorId}\n        name={doctorName}\n        degrees={qualification}\n        departments={departmentsArray}\n        experience={experience}\n        description={description}\n        daysAvailable={daysAvailable}\n        timings={timings}\n        doctorImageUrl={doctorImage}\n        bookButtonHidden\n      />\n      <br />\n      <div style={{ color: '#69d5b1', fontSize: '20px' }}>\n        Please provide the following details to confirm your appointment\n      </div>\n      <br />\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Patient Name\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          className=\"form-textfield\"\n          placeholder=\"Enter Patient's name\"\n          value={patientName}\n          onChange={(event) => { onInputChange(event, setPatientName); }}\n        />\n      </div>\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Age\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter patient's age\"\n          className=\"form-textfield\"\n          value={age}\n          onChange={(event) => { onInputChange(event, setAge); }}\n        />\n      </div>\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Address\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter patient's address\"\n          className=\"form-textfield\"\n          value={address}\n          onChange={(event) => { onInputChange(event, setAddress); }}\n        />\n      </div>\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Date of Appointment\n      </div>\n      <div>\n        <input\n          type=\"date\"\n          className=\"form-textfield\"\n          value={dateOfAppointment}\n          onChange={(event) => { onInputChange(event, setDateOfAppointment); }}\n        />\n      </div>\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Contact Number\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter mobile number\"\n          className=\"form-textfield\"\n          value={contactNumber}\n          onChange={(event) => { onInputChange(event, setContactNumber); }}\n        />\n      </div>\n      <div style={{ marginTop: '10px', marginBottom: '5px', marginLeft: '5px' }}>\n        Email address\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter email address\"\n          className=\"form-textfield\"\n          value={email}\n          onChange={(event) => { onInputChange(event, setEmail); }}\n        />\n      </div>\n      <div className=\"ma2\">\n        <MessageCard\n          message={message}\n          messageType={messageType}\n        />\n      </div>\n      <div className=\"button-wrapper\">\n        <button type=\"filled\" onClick={onBookButtonClick}>Book Appointment</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingPage;\n"]},"metadata":{},"sourceType":"module"}