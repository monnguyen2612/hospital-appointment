{"ast":null,"code":"var _jsxFileName = \"/Users/capt4inmon/Documents/hospital-appointment/src/components/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.css';\n\nconst Search = props => {\n  const {\n    setHospitalName,\n    onSearchQuery,\n    hospitalName\n  } = props;\n  const [displayClearFilters, setDisplayClearFilters] = useState(false); // The following function update the value of hospitalName in the parent component\n  // when the value of input field changes\n\n  const onSearchValueChange = event => {\n    setHospitalName(event.target.value);\n    setDisplayClearFilters(true);\n    onSearchQuery(hospitalName);\n  }; // The following function is used to clear the search results\n\n\n  const clearSearchQuery = () => {\n    setHospitalName('');\n    setDisplayClearFilters(false);\n    const updatedHospitalName = '';\n    onSearchQuery(updatedHospitalName);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoFocus: true,\n    placeholder: \"Nh\\u1EADp t\\xEAn b\\u1EC7nh vi\\u1EC7n ...\",\n    value: hospitalName,\n    onChange: event => onSearchValueChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), displayClearFilters ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"filled\",\n    onClick: clearSearchQuery,\n    className: \"clear-filters-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"X\\xF3a b\\u1ED9 l\\u1ECDc\") : null);\n};\n\nSearch.propTypes = {\n  onSearchQuery: PropTypes.func.isRequired,\n  setHospitalName: PropTypes.func.isRequired,\n  hospitalName: PropTypes.string.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-appointment/src/components/Search.js"],"names":["React","useState","PropTypes","Search","props","setHospitalName","onSearchQuery","hospitalName","displayClearFilters","setDisplayClearFilters","onSearchValueChange","event","target","value","clearSearchQuery","updatedHospitalName","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA;AAAlC,MAAmDH,KAAzD;AACA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,KAAD,CAA9D,CAFwB,CAIxB;AACA;;AACA,QAAMS,mBAAmB,GAAIC,KAAD,IAAW;AACrCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAJ,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAH,IAAAA,aAAa,CAACC,YAAD,CAAb;AACD,GAJD,CANwB,CAYxB;;;AACA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAI,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACA,UAAMM,mBAAmB,GAAG,EAA5B;AACAT,IAAAA,aAAa,CAACS,mBAAD,CAAb;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAC,0CAHd;AAIE,IAAA,KAAK,EAAER,YAJT;AAKE,IAAA,QAAQ,EAAGI,KAAD,IAAWD,mBAAmB,CAACC,KAAD,CAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWIH,mBAAmB,gBACf;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,gBAA/B;AAAiD,IAAA,SAAS,EAAC,sBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADe,GAEf,IAbR,CADF;AAkBD,CAtCD;;AAwCAX,MAAM,CAACa,SAAP,GAAmB;AACjBV,EAAAA,aAAa,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADb;AAEjBb,EAAAA,eAAe,EAAEH,SAAS,CAACe,IAAV,CAAeC,UAFf;AAGjBX,EAAAA,YAAY,EAAEL,SAAS,CAACiB,MAAV,CAAiBD;AAHd,CAAnB;AAMA,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.css';\n\nconst Search = (props) => {\n  const { setHospitalName, onSearchQuery, hospitalName } = props;\n  const [displayClearFilters, setDisplayClearFilters] = useState(false);\n\n  // The following function update the value of hospitalName in the parent component\n  // when the value of input field changes\n  const onSearchValueChange = (event) => {\n    setHospitalName(event.target.value);\n    setDisplayClearFilters(true);\n    onSearchQuery(hospitalName);\n  };\n\n  // The following function is used to clear the search results\n  const clearSearchQuery = () => {\n    setHospitalName('');\n    setDisplayClearFilters(false);\n    const updatedHospitalName = '';\n    onSearchQuery(updatedHospitalName);\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          autoFocus\n          placeholder=\"Nhập tên bệnh viện ...\"\n          value={hospitalName}\n          onChange={(event) => onSearchValueChange(event)}\n        />\n      </div>\n      {\n        displayClearFilters\n          ? <button type=\"filled\" onClick={clearSearchQuery} className=\"clear-filters-button\">Xóa bộ lọc</button>\n          : null\n      }\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  onSearchQuery: PropTypes.func.isRequired,\n  setHospitalName: PropTypes.func.isRequired,\n  hospitalName: PropTypes.string.isRequired,\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}